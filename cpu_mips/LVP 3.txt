wire [7:0]one,s0,s1,s2,s3,s4,s5,s6,s7;
Decoder  inst1(SW[16:14],one);
Register inst2(KEY[1],SW[17],SW[7:0],one,s0,s1,s2,s3,s4,s5,s6,s7);
MUX      inst3(s0,s1,s2,s3,s4,s5,s6,s7,SW[13:11],w_d0x0[7:0]);
MUX      inst4(s0,s1,s2,s3,s4,s5,s6,s7,SW[10:8],w_d0x1[7:0]);
Display  inst5(SW[3:0], HEX0[0:6]);
Display  inst6(SW[7:4], HEX1[0:6]);

assign LEDG[8] =~KEY[1];
endmodule

module Decoder(input [2:0]E,
					output reg[7:0] S);
					
		always@(*)begin
	case(E)
		3'b000:S=8'b00000000;
		3'b001:S=8'b00000010;
		3'b010:S=8'b00000100;
		3'b011:S=8'b00001000;
		3'b100:S=8'b00010000;
		3'b101:S=8'b00100000;
		3'b110:S=8'b01000000;
		3'b111:S=8'b10000000;
	endcase
end
endmodule

module MUX(input [7:0]a,b,c,d,e,f,g,h,
			  input [3:0] sel,		  
			  output reg[7:0] out );
			  
    always @(*) begin
        case (sel)
            4'd0: out = a;
            4'd1: out = b;
            4'd2: out = c;
            4'd3: out = d;
            4'd4: out = e;
            4'd5: out = f;
            4'd6: out = g;
            4'd7: out = h;
            default: out = {8{1'b1}};  
        endcase
    end
endmodule


module Register (input clk, enable, 
					  input [7:0]data,local,
					  output reg [7:0]s0,s1,s2,s3,s4,s5,s6,s7);
					  
	always@(posedge clk)begin
		if(enable) 
			case(local)
				8'b00000001:s0=data;
				8'b00000010:s1=data;
				8'b00000100:s2=data;
				8'b00001000:s3=data;
				8'b00010000:s4=data;
				8'b00100000:s5=data;
				8'b01000000:s6=data;
				8'b10000000:s7=data;
			endcase
	end
endmodule

module Display(input [3:0]E,
					output reg[0:6] S);
					
		always@(*)begin
	case(E)
		4'b0000:S=7'b0000001;
		4'b0001:S=7'b1001111;
		4'b0010:S=7'b0010010;
		4'b0011:S=7'b0000110;
		4'b0100:S=7'b1001100;
		4'b0101:S=7'b0100100;
		4'b0110:S=7'b0100000;
		4'b0111:S=7'b0001111;
		4'b1000:S=7'b0000000;
		4'b1001:S=7'b0001100;
		4'b1010:S=7'b0001000;
		4'b1011:S=7'b1100000;
		4'b1100:S=7'b0110001;
		4'b1101:S=7'b1000010;
		4'b1110:S=7'b0110000;
		4'b1111:S=7'b0111000;
	endcase
end
endmodule


